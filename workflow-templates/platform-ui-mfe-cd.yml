# Important! First set the CI workflow. Just after you're done with CI start with CD.
name: CD

# Workflow trigger setup. For more information: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
on:
  # This event occurs when a workflow run is requested or completed. It allows you to execute a workflow based on execution or completion of another workflow. 
  # More info at: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
  workflow_run:
    workflows: [CI]
    types:
      - completed

jobs:
  cd:
    name: cd
    # For more information and detailed docs please check 8x8/platform-ui-mfe-cd-workflow
    # Info: to increase readability of your workflow and support the future default value updates, please delete the keys you're not using
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    uses: 8x8/platform-ui-mfe-cd-workflow/.github/workflows/mfe-cd.yml@v1.2
    with:
      # The unique identifier of the CI workflow run which triggered the CD workflow
      # Mandatory value, keep the workflow_run.id
      ciWorkflowRunId: ${{ github.event.workflow_run.id }}
      
      # Namespace string. Can be your team name, product name, string that identifies your project. Alphanumeric value.
      # Used as prefix of the resource keys in bucket
      # Default: normalised repository name
      namespace: 
      
      # Path to the repote entry file of the MFE. Value relative to the root of the MFE package. 
      # Mandatory field
      # Example: dist/remoteEntry.js
      remoteEntry: 
      
      # Base URL publicly available and associated to your infrastructure setup
      cdnPublicUrl:
      
      # NPM registry used to publish artifacts generated by CI (format example: `//artifactory.registry.com/npm/npm-repository/`)
      npmRegistry:
      
    # For more information and detailed docs please check 8x8/platform-ui-mfe-cd-workflow
    secrets: inherit


